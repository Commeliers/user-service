plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'hp'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    testImplementation 'io.projectreactor:reactor-test'
    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //oauth프로젝트
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.7'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 스프링 시큐리티를 사용하기 위한 스타터 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
//    testImplementation 'org.springframework.security:spring-security-test'

    // jwt 사용
//    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
//    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
//    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // 스웨거 사용
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.1.0'

    // AWS 서비스 의존성 추가
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // WebFlux 사용
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // QueryDsl
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

}

tasks.named('test') {
    useJUnitPlatform()
}
